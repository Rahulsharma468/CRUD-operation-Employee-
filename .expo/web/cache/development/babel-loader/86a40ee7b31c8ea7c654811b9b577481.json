{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport firebase from 'firebase';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from \"./reducers\";\nimport Router from \"./Router\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var config = {\n        apiKey: \"AIzaSyDy4rzv0kQWOanG6GSCbLn7VdT5nrcgGs0\",\n        authDomain: \"manager-bda67.firebaseapp.com\",\n        databaseURL: \"https://manager-bda67.firebaseio.com\",\n        projectId: \"manager-bda67\",\n        storageBucket: \"manager-bda67.appspot.com\",\n        messagingSenderId: \"951254599554\",\n        appId: \"1:951254599554:web:7b72b379c17c020333b19b\",\n        measurementId: \"G-FG9JKHR24Z\"\n      };\n      firebase.initializeApp(config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 4\n        }\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/App.js"],"names":["React","Component","Provider","createStore","applyMiddleware","firebase","ReduxThunk","reducers","Router","App","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP;AAEA,OAAOC,MAAP;;IAEMC,G;;;;;;;;;;;;;yCACgB;AACnB,UAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,yCADK;AAEdC,QAAAA,UAAU,EAAE,+BAFE;AAGdC,QAAAA,WAAW,EAAE,sCAHC;AAIdC,QAAAA,SAAS,EAAE,eAJG;AAKdC,QAAAA,aAAa,EAAE,2BALD;AAMdC,QAAAA,iBAAiB,EAAE,cANL;AAOdC,QAAAA,KAAK,EAAE,2CAPO;AAQdC,QAAAA,aAAa,EAAE;AARD,OAAf;AAUAb,MAAAA,QAAQ,CAACc,aAAT,CAAuBT,MAAvB;AACD;;;6BACQ;AACR,UAAMU,KAAK,GAAGjB,WAAW,CAACI,QAAD,EAAW,EAAX,EAAeH,eAAe,CAACE,UAAD,CAA9B,CAAzB;AAEA,aACC,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEc,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAKA;;;;EAtBgBnB,S;;AAyBlB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport firebase from 'firebase';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n// import TableOfContents from './TableOfContents';\nimport Router from './Router';\n\nclass App extends Component {\n\tcomponentWillMount() {\n\t  const config = {\n\t    apiKey: \"AIzaSyDy4rzv0kQWOanG6GSCbLn7VdT5nrcgGs0\",\n    authDomain: \"manager-bda67.firebaseapp.com\",\n    databaseURL: \"https://manager-bda67.firebaseio.com\",\n    projectId: \"manager-bda67\",\n    storageBucket: \"manager-bda67.appspot.com\",\n    messagingSenderId: \"951254599554\",\n    appId: \"1:951254599554:web:7b72b379c17c020333b19b\",\n    measurementId: \"G-FG9JKHR24Z\"\n\t  };\n\t  firebase.initializeApp(config);\n\t}\n\trender() {\n\t\tconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router />\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}