{"ast":null,"code":"import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\nimport { EMAIL_CHANGED, PASSWORD_CHANGED, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER } from \"./types\";\nexport var emailChanged = function emailChanged(text) {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  };\n};\nexport var passwordChanged = function passwordChanged(text) {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n};\nexport var loginUser = function loginUser(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_USER\n    });\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      return loginUserSuccess(dispatch, user);\n    }).catch(function () {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n        return loginUserSuccess(dispatch, user);\n      }).catch(function () {\n        return loginUserFail(dispatch);\n      });\n    });\n  };\n};\n\nvar loginUserFail = function loginUserFail(dispatch) {\n  dispatch({\n    type: LOGIN_USER_FAIL\n  });\n};\n\nvar loginUserSuccess = function loginUserSuccess(dispatch, user) {\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  });\n  Actions.main();\n};","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/actions/AuthActions.js"],"names":["firebase","Actions","EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER","emailChanged","text","type","payload","passwordChanged","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","loginUserSuccess","catch","createUserWithEmailAndPassword","loginUserFail","main"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,UALF;AAQA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEP,aADD;AAELQ,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,IAAI,EAAI;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAEN,gBADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAR;AAEAN,IAAAA,QAAQ,CACLgB,IADH,GAEGC,0BAFH,CAE8BJ,KAF9B,EAEqCC,QAFrC,EAGGI,IAHH,CAGQ,UAAAC,IAAI;AAAA,aAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,KAHZ,EAIGE,KAJH,CAIS,YAAM;AAGXrB,MAAAA,QAAQ,CACLgB,IADH,GAEGM,8BAFH,CAEkCT,KAFlC,EAEyCC,QAFzC,EAGGI,IAHH,CAGQ,UAAAC,IAAI;AAAA,eAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,OAHZ,EAIGE,KAJH,CAIS;AAAA,eAAME,aAAa,CAACR,QAAD,CAAnB;AAAA,OAJT;AAKD,KAZH;AAaD,GAhBD;AAiBD,CAlBM;;AAoBP,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAAAR,QAAQ,EAAI;AAChCA,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACD,CAFD;;AAIA,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,QAAD,EAAWI,IAAX,EAAoB;AAC3CJ,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEL,kBAAR;AAA4BM,IAAAA,OAAO,EAAES;AAArC,GAAD,CAAR;AAGAlB,EAAAA,OAAO,CAACuB,IAAR;AACD,CALD","sourcesContent":["import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\n\nimport {\n  EMAIL_CHANGED,\n  PASSWORD_CHANGED,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAIL,\n  LOGIN_USER\n} from './types';\n\nexport const emailChanged = text => {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  };\n};\n\nexport const passwordChanged = text => {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n};\n\nexport const loginUser = ({ email, password }) => {\n  return dispatch => {\n    dispatch({ type: LOGIN_USER });\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(user => loginUserSuccess(dispatch, user))\n      .catch(() => {\n        // console.log(error);\n\n        firebase\n          .auth()\n          .createUserWithEmailAndPassword(email, password)\n          .then(user => loginUserSuccess(dispatch, user))\n          .catch(() => loginUserFail(dispatch));\n      });\n  };\n};\n\nconst loginUserFail = dispatch => {\n  dispatch({ type: LOGIN_USER_FAIL });\n};\n\nconst loginUserSuccess = (dispatch, user) => {\n  dispatch({ type: LOGIN_USER_SUCCESS, payload: user });\n\n  // comes from scene employeeList (from the key)\n  Actions.main();\n};\n"]},"metadata":{},"sourceType":"module"}