{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/components/EmployeeList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { employeesFetch } from \"../actions\";\nimport ListItem from \"./ListItem\";\n\nvar EmployeeList = function (_Component) {\n  _inherits(EmployeeList, _Component);\n\n  var _super = _createSuper(EmployeeList);\n\n  function EmployeeList() {\n    _classCallCheck(this, EmployeeList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EmployeeList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.employeesFetch();\n      this.createDataSource(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.createDataSource(nextProps);\n    }\n  }, {\n    key: \"createDataSource\",\n    value: function createDataSource(_ref) {\n      var employees = _ref.employees;\n      var ds = new ListView.DataSource({\n        rowHasChanged: function rowHasChanged(r1, r2) {\n          return r1 !== r2;\n        }\n      });\n      this.dataSource = ds.cloneWithRows(employees);\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(employee) {\n      return React.createElement(ListItem, {\n        employee: employee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(ListView, {\n        enableEmptySections: true,\n        dataSource: this.dataSource,\n        renderRow: this.renderRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return EmployeeList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var employees = _.map(state.employees, function (val, uid) {\n    return _objectSpread(_objectSpread({}, val), {}, {\n      uid: uid\n    });\n  });\n\n  return {\n    employees: employees\n  };\n};\n\nexport default connect(mapStateToProps, {\n  employeesFetch: employeesFetch\n})(EmployeeList);","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/components/EmployeeList.js"],"names":["React","Component","connect","_","employeesFetch","ListItem","EmployeeList","props","createDataSource","nextProps","employees","ds","ListView","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","employee","console","log","renderRow","mapStateToProps","state","map","val","uid"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,cAAT;AACA,OAAOC,QAAP;;IAEMC,Y;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWH,cAAX;AACA,WAAKI,gBAAL,CAAsB,KAAKD,KAA3B;AACD;;;8CAEyBE,S,EAAW;AAInC,WAAKD,gBAAL,CAAsBC,SAAtB;AACD;;;2CAE+B;AAAA,UAAbC,SAAa,QAAbA,SAAa;AAC9B,UAAMC,EAAE,GAAG,IAAIC,QAAQ,CAACC,UAAb,CAAwB;AACjCC,QAAAA,aAAa,EAAE,uBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA;AADkB,OAAxB,CAAX;AAGA,WAAKC,UAAL,GAAkBN,EAAE,CAACO,aAAH,CAAiBR,SAAjB,CAAlB;AACD;;;8BAESS,Q,EAAU;AAClB,aAAO,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BAEQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACA,aACE,oBAAC,QAAD;AACE,QAAA,mBAAmB,MADrB;AAEE,QAAA,UAAU,EAAE,KAAKU,UAFnB;AAGE,QAAA,SAAS,EAAE,KAAKK,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAjCwBrB,S;;AAoC3B,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAE/B,MAAMd,SAAS,GAAGP,CAAC,CAACsB,GAAF,CAAMD,KAAK,CAACd,SAAZ,EAAuB,UAACgB,GAAD,EAAMC,GAAN,EAAc;AACrD,2CAAYD,GAAZ;AAAiBC,MAAAA,GAAG,EAAHA;AAAjB;AACD,GAFiB,CAAlB;;AAGA,SAAO;AAAEjB,IAAAA,SAAS,EAATA;AAAF,GAAP;AACD,CAND;;AAQA,eAAeR,OAAO,CAACqB,eAAD,EAAkB;AAAEnB,EAAAA,cAAc,EAAdA;AAAF,CAAlB,CAAP,CAA6CE,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { ListView } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport { employeesFetch } from \"../actions\";\nimport ListItem from \"./ListItem\";\n\nclass EmployeeList extends Component {\n  componentWillMount() {\n    this.props.employeesFetch();\n    this.createDataSource(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // nextProps are next set of props that this component\n    // will be rendered with\n    // this.props is the old set of props\n    this.createDataSource(nextProps);\n  }\n\n  createDataSource({ employees }) {\n    const ds = new ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1 !== r2\n    });\n    this.dataSource = ds.cloneWithRows(employees);\n  }\n\n  renderRow(employee) {\n    return <ListItem employee={employee} />;\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <ListView\n        enableEmptySections\n        dataSource={this.dataSource}\n        renderRow={this.renderRow}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // convert collection of employees into array of employee objects\n  const employees = _.map(state.employees, (val, uid) => {\n    return { ...val, uid };\n  });\n  return { employees };\n};\n\nexport default connect(mapStateToProps, { employeesFetch })(EmployeeList);\n"]},"metadata":{},"sourceType":"module"}