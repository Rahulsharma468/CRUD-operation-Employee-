{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/components/LoginForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { emailChanged, passwordChanged, loginUser } from \"../actions\";\nimport { Card, CardSection, Input, Button, Spinner } from \"./common\";\n\nvar LoginForm = function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    _classCallCheck(this, LoginForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginForm, [{\n    key: \"onEmailChange\",\n    value: function onEmailChange(text) {\n      this.props.emailChanged(text);\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(text) {\n      this.props.passwordChanged(text);\n    }\n  }, {\n    key: \"onButtonPress\",\n    value: function onButtonPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      this.props.loginUser({\n        email: email,\n        password: password\n      });\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      if (this.props.loading) {\n        return React.createElement(Spinner, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(Button, {\n        onPress: this.onButtonPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, \"Login\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"email@gmail.com\",\n        onChangeText: this.onEmailChange.bind(this),\n        value: this.props.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      })), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, React.createElement(Input, {\n        secureTextEntry: true,\n        label: \"Password\",\n        placeholder: \"password\",\n        onChangeText: this.onPasswordChange.bind(this),\n        value: this.props.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        style: styles.errorTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, this.props.error), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, this.renderButton()));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar styles = {\n  errorTextStyle: {\n    fontSize: 20,\n    alignSelf: 'center',\n    color: 'red'\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  var email = auth.email,\n      password = auth.password,\n      error = auth.error,\n      loading = auth.loading;\n  return {\n    email: email,\n    password: password,\n    error: error,\n    loading: loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  emailChanged: emailChanged,\n  passwordChanged: passwordChanged,\n  loginUser: loginUser\n})(LoginForm);","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/components/LoginForm.js"],"names":["React","Component","connect","emailChanged","passwordChanged","loginUser","Card","CardSection","Input","Button","Spinner","LoginForm","text","props","email","password","loading","onButtonPress","bind","onEmailChange","onPasswordChange","styles","errorTextStyle","error","renderButton","fontSize","alignSelf","color","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { emailChanged, passwordChanged, loginUser } from '../actions'\nimport { Card, CardSection, Input, Button, Spinner } from './common'\n\nclass LoginForm extends Component{\n\n  onEmailChange(text){\n    this.props.emailChanged(text)\n  }\n\n  onPasswordChange(text){\n    this.props.passwordChanged(text)\n  }\n\n  onButtonPress(){\n    const { email, password } = this.props\n    this.props.loginUser({ email, password })\n  }\n\n  renderButton(){\n    if(this.props.loading){\n      return <Spinner size=\"large\" />\n    }\n\n    return(\n      <Button onPress={this.onButtonPress.bind(this)}>\n        Login\n      </Button>\n    )\n  }\n\n  render(){\n    return(\n      <Card>\n        <CardSection>\n          <Input\n            label=\"Email\"\n            placeholder=\"email@gmail.com\"\n            onChangeText={this.onEmailChange.bind(this)}\n            value={this.props.email}\n          />\n        </CardSection>\n\n        <CardSection>\n          <Input\n            secureTextEntry\n            label=\"Password\"\n            placeholder=\"password\"\n            onChangeText={this.onPasswordChange.bind(this)}\n            value={this.props.password}\n          />\n        </CardSection>\n        <Text style={styles.errorTextStyle}>\n          {this.props.error}\n        </Text>\n        <CardSection>\n          {this.renderButton()}\n        </CardSection>\n      </Card>\n    )\n  }\n}\n\nconst styles = {\n  errorTextStyle: {\n    fontSize: 20,\n    alignSelf: 'center',\n    color: 'red'\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  const { email, password, error, loading } = auth\n\n  return { email, password, error, loading }\n}\n\nexport default connect(mapStateToProps, { emailChanged, passwordChanged, loginUser })(LoginForm)\n"]},"metadata":{},"sourceType":"module"}