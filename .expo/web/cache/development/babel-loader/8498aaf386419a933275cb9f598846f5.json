{"ast":null,"code":"import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\nimport { EMPLOYEE_UPDATE, EMPLOYEE_CREATE, EMPLOYEES_FETCH_SUCCESS, EMPLOYEE_SAVE_SUCCESS, EMPLOYEE_FIRE_SUCCESS } from \"./types\";\nexport var employeeUpdate = function employeeUpdate(_ref) {\n  var prop = _ref.prop,\n      value = _ref.value;\n  return {\n    type: EMPLOYEE_UPDATE,\n    payload: {\n      prop: prop,\n      value: value\n    }\n  };\n};\nexport var employeeCreate = function employeeCreate(_ref2) {\n  var name = _ref2.name,\n      phone = _ref2.phone,\n      shift = _ref2.shift;\n\n  var _firebase$auth = firebase.auth(),\n      currentUser = _firebase$auth.currentUser;\n\n  return function (dispatch) {\n    firebase.database().ref(\"/users/\" + currentUser.uid + \"/employees\").push({\n      name: name,\n      phone: phone,\n      shift: shift\n    }).then(function () {\n      dispatch({\n        type: EMPLOYEE_CREATE\n      });\n      Actions.main({\n        type: 'reset'\n      });\n    });\n  };\n};\nexport var employeesFetch = function employeesFetch() {\n  var _firebase$auth2 = firebase.auth(),\n      currentUser = _firebase$auth2.currentUser;\n\n  return function (dispatch) {\n    firebase.database().ref(\"/users/\" + currentUser.uid + \"/employees\").on('value', function (snapshot) {\n      dispatch({\n        type: EMPLOYEES_FETCH_SUCCESS,\n        payload: snapshot.val()\n      });\n    });\n  };\n};\nexport var employeeSave = function employeeSave(_ref3) {\n  var name = _ref3.name,\n      phone = _ref3.phone,\n      shift = _ref3.shift,\n      uid = _ref3.uid;\n\n  var _firebase$auth3 = firebase.auth(),\n      currentUser = _firebase$auth3.currentUser;\n\n  return function (dispatch) {\n    firebase.database().ref(\"/users/\" + currentUser.uid + \"/employees/\" + uid).set({\n      name: name,\n      phone: phone,\n      shift: shift\n    }).then(function () {\n      dispatch({\n        type: EMPLOYEE_SAVE_SUCCESS\n      });\n      Actions.main({\n        type: 'reset'\n      });\n    });\n  };\n};\nexport var employeeDelete = function employeeDelete(_ref4) {\n  var uid = _ref4.uid;\n\n  var _firebase$auth4 = firebase.auth(),\n      currentUser = _firebase$auth4.currentUser;\n\n  return function (dispatch) {\n    firebase.database().ref(\"/users/\" + currentUser.uid + \"/employees/\" + uid).remove().then(function () {\n      dispatch({\n        type: EMPLOYEE_FIRE_SUCCESS\n      });\n      Actions.main({\n        type: 'reset'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/actions/EmployeeActions.js"],"names":["firebase","Actions","EMPLOYEE_UPDATE","EMPLOYEE_CREATE","EMPLOYEES_FETCH_SUCCESS","EMPLOYEE_SAVE_SUCCESS","EMPLOYEE_FIRE_SUCCESS","employeeUpdate","prop","value","type","payload","employeeCreate","name","phone","shift","auth","currentUser","dispatch","database","ref","uid","push","then","main","employeesFetch","on","snapshot","val","employeeSave","set","employeeDelete","remove"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\nimport {\n\tEMPLOYEE_UPDATE,\n\tEMPLOYEE_CREATE,\n\tEMPLOYEES_FETCH_SUCCESS,\n\tEMPLOYEE_SAVE_SUCCESS,\n  EMPLOYEE_FIRE_SUCCESS\n} from './types';\n\nexport const employeeUpdate = ({ prop, value }) => {\n\treturn {\n\t\ttype: EMPLOYEE_UPDATE,\n\t\tpayload: { prop, value }\n\t};\n};\n\nexport const employeeCreate = ({ name, phone, shift }) => {\n\tconst { currentUser } = firebase.auth();\n\n\treturn (dispatch) =>  {\n\t\tfirebase.database().ref(`/users/${currentUser.uid}/employees`)\n\t\t\t.push({ name, phone, shift })\n\t\t\t.then(() => {\n\t\t\t\tdispatch({ type: EMPLOYEE_CREATE });\n\t\t\t\tActions.main({ type: 'reset' });\n\t\t\t});\n\t};\n};\n\nexport const employeesFetch = () => {\n\tconst { currentUser } = firebase.auth();\n\n\treturn (dispatch) => {\n\t\tfirebase.database().ref(`/users/${currentUser.uid}/employees`)\n\t\t\t.on('value', snapshot => {\n\t\t\t\tdispatch({ type: EMPLOYEES_FETCH_SUCCESS, payload: snapshot.val() });\n\t\t});\n\t};\n};\n\nexport const employeeSave = ({ name, phone, shift, uid }) => {\n\tconst { currentUser } = firebase.auth();\n\n\treturn (dispatch) => {\n\t\tfirebase.database().ref(`/users/${currentUser.uid}/employees/${uid}`)\n\t\t\t.set({ name, phone, shift })\n\t\t\t.then(() => {\n\t\t\t\tdispatch({ type: EMPLOYEE_SAVE_SUCCESS });\n\t\t\t\tActions.main({ type: 'reset' });\n\t\t\t});\n\t};\n};\n\n// dont need dispatch because auto triggering employeeFetch() action will update app already\n// actually i want to clear out the redux state after firing, so adding back dispatch for EMPLOYEE_FIRE_SUCCESS\nexport const employeeDelete = ({ uid }) => {\n\tconst { currentUser } = firebase.auth();\n\n\treturn (dispatch) => {\n\t\tfirebase.database().ref(`/users/${currentUser.uid}/employees/${uid}`)\n\t\t\t.remove()\n\t\t\t.then(() => {\n        dispatch({ type: EMPLOYEE_FIRE_SUCCESS });\n\t\t\t\tActions.main({ type: 'reset' });\n\t\t\t});\n\t};\n};"]},"metadata":{},"sourceType":"module"}