{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/components/LoginForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { emailChanged, passwordChanged, loginUser } from \"../actions\";\nimport { Card, CardSection, Input, Button, Spinner, Header } from \"./common\";\n\nvar LoginForm = function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    _classCallCheck(this, LoginForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('LoginForm here');\n      console.log('props', this.props);\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(text) {\n      this.props.emailChanged(text);\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(text) {\n      this.props.passwordChanged(text);\n    }\n  }, {\n    key: \"onButtonPress\",\n    value: function onButtonPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      this.props.loginUser({\n        email: email,\n        password: password\n      });\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      if (this.props.loading) {\n        return React.createElement(Spinner, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(Button, {\n        onPress: this.onButtonPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, \"Login\");\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError() {\n      if (this.props.error) {\n        return React.createElement(View, {\n          style: {\n            backgroundColor: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.errorTextStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, this.props.error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewStyle = styles.viewStyle,\n          textStyle = styles.textStyle;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"email@gmail.com\",\n        onChangeText: this.onEmailChange.bind(this),\n        value: this.props.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      })), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, React.createElement(Input, {\n        secureTextEntry: true,\n        label: \"Password\",\n        placeholder: \"password\",\n        onChangeText: this.onPasswordChange.bind(this),\n        value: this.props.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      })), this.renderError(), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, this.renderButton())));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar styles = {\n  viewStyle: {\n    backgroundColor: '#F8F8F8',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 60,\n    paddingTop: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    elevation: 2,\n    position: 'relative'\n  },\n  textStyle: {\n    fontSize: 20\n  },\n  errorTextStyle: {\n    fontSize: 20,\n    alignSelf: 'center',\n    color: 'red'\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  var email = auth.email,\n      password = auth.password,\n      error = auth.error,\n      loading = auth.loading;\n  return {\n    email: email,\n    password: password,\n    error: error,\n    loading: loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  emailChanged: emailChanged,\n  passwordChanged: passwordChanged,\n  loginUser: loginUser\n})(LoginForm);","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/components/LoginForm.js"],"names":["React","Component","connect","emailChanged","passwordChanged","loginUser","Card","CardSection","Input","Button","Spinner","Header","LoginForm","console","log","props","text","email","password","loading","onButtonPress","bind","error","backgroundColor","styles","errorTextStyle","viewStyle","textStyle","marginTop","onEmailChange","onPasswordChange","renderError","renderButton","justifyContent","alignItems","height","paddingTop","shadowColor","shadowOffset","width","shadowOpacity","elevation","position","fontSize","alignSelf","color","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text } from 'react-native';\nimport { connect } from 'react-redux';\nimport { emailChanged, passwordChanged, loginUser } from '../actions';\nimport { Card, CardSection, Input, Button, Spinner, Header } from './common';\n\nclass LoginForm extends Component {\n  componentWillMount() {\n    console.log('LoginForm here');\n    console.log('props', this.props);\n  }\n\n  onEmailChange(text) {\n    this.props.emailChanged(text);\n  }\n\n  onPasswordChange(text) {\n    this.props.passwordChanged(text);\n  }\n\n  onButtonPress() {\n    const { email, password } = this.props;\n    this.props.loginUser({ email, password });\n  }\n\n  renderButton() {\n    if (this.props.loading) {\n      return <Spinner size=\"large\" />;\n    }\n\n    return (\n      <Button onPress={this.onButtonPress.bind(this)}>\n        Login\n      </Button>\n    );\n  }\n\n  renderError() {\n    if (this.props.error) {\n      return (\n        <View \n          style={{\n            backgroundColor: 'white'\n          }}\n        >\n          <Text style={styles.errorTextStyle}>\n            {this.props.error}\n          </Text>\n        </View>\n      );\n    }\n  }\n\n  render() {\n    const { viewStyle, textStyle } = styles;\n    return (\n      <View>\n        <Card style={{ marginTop: 5 }}>\n          <CardSection>\n            <Input\n              label=\"Email\"\n              placeholder=\"email@gmail.com\"\n              onChangeText={this.onEmailChange.bind(this)}\n              value={this.props.email}\n            />\n          </CardSection>\n\n          <CardSection>\n            <Input\n              secureTextEntry\n              label=\"Password\"\n              placeholder=\"password\"\n              onChangeText={this.onPasswordChange.bind(this)}\n              value={this.props.password}\n            />\n          </CardSection>\n\n          {this.renderError()}\n\n          <CardSection>\n            {this.renderButton()}\n          </CardSection>\n        </Card>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  viewStyle: {\n    backgroundColor: '#F8F8F8',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 60,\n    paddingTop: 15,\n    shadowColor: '#000',\n    shadowOffset: { width:  0, height: 2 },\n    shadowOpacity: 0.8,\n    elevation: 2,\n    position: 'relative'\n  },\n  textStyle: {\n    fontSize: 20\n  },\n  errorTextStyle: {\n    fontSize: 20,\n    alignSelf: 'center',\n    color: 'red'\n  }\n};\n\n\nconst mapStateToProps = ({ auth }) => {\n  const { email, password, error, loading } = auth;\n\n  return { email, password, error, loading };\n};\n\nexport default connect(mapStateToProps, {\n  emailChanged, passwordChanged, loginUser\n})(LoginForm);"]},"metadata":{},"sourceType":"module"}