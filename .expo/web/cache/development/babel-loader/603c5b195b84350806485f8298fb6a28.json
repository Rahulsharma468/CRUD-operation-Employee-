{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/components/LoginForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from \"react-redux\";\nimport { emailChanged, passwordChanged, loginUser } from \"../actions\";\nimport { Card, CardSection, Input, Button, Spinner } from \"./common\";\n\nvar LoginForm = function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    _classCallCheck(this, LoginForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginForm, [{\n    key: \"onEmailChange\",\n    value: function onEmailChange(text) {\n      this.props.emailChanged(text);\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(text) {\n      this.props.passwordChanged(text);\n    }\n  }, {\n    key: \"onButtonPress\",\n    value: function onButtonPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      this.props.loginUser({\n        email: email,\n        password: password\n      });\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError() {\n      if (this.props.error) {\n        return React.createElement(View, {\n          style: {\n            backgroundColor: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.errorTextStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }\n        }, this.props.error));\n      }\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      if (this.props.loading) {\n        return React.createElement(Spinner, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(Button, {\n        onPress: this.onButtonPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }\n      }, \"Login\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          password = _this$props2.password;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"email@gmail.com\",\n        onChangeText: this.onEmailChange.bind(this),\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      })), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(Input, {\n        label: \"Password\",\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: this.onPasswordChange.bind(this),\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })), this.renderError(), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, this.renderButton()));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar styles = {\n  errorTextStyle: {\n    fontSize: 20,\n    alignSelf: \"center\",\n    color: \"red\"\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$auth = state.auth,\n      email = _state$auth.email,\n      password = _state$auth.password,\n      error = _state$auth.error,\n      loading = _state$auth.loading;\n  return {\n    email: email,\n    password: password,\n    error: error,\n    loading: loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  emailChanged: emailChanged,\n  passwordChanged: passwordChanged,\n  loginUser: loginUser\n})(LoginForm);","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/components/LoginForm.js"],"names":["React","Component","connect","emailChanged","passwordChanged","loginUser","Card","CardSection","Input","Button","Spinner","LoginForm","text","props","email","password","error","backgroundColor","styles","errorTextStyle","loading","onButtonPress","bind","onEmailChange","onPasswordChange","renderError","renderButton","fontSize","alignSelf","color","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { emailChanged, passwordChanged, loginUser } from \"../actions\";\nimport { Card, CardSection, Input, Button, Spinner } from \"./common\";\n\nclass LoginForm extends Component {\n  onEmailChange(text) {\n    this.props.emailChanged(text);\n  }\n\n  onPasswordChange(text) {\n    this.props.passwordChanged(text);\n  }\n  onButtonPress() {\n    const { email, password } = this.props;\n    this.props.loginUser({ email, password });\n  }\n  renderError() {\n    if (this.props.error) {\n      return (\n        <View style={{ backgroundColor: \"white\" }}>\n          <Text style={styles.errorTextStyle}>{this.props.error}</Text>\n        </View>\n      );\n    }\n  }\n  renderButton() {\n    if (this.props.loading) {\n      return <Spinner size=\"large\" />;\n    }\n\n    return <Button onPress={this.onButtonPress.bind(this)}>{\"Login\"}</Button>;\n  }\n  render() {\n    const { email, password } = this.props;\n    return (\n      <Card>\n        <CardSection>\n          <Input\n            label=\"Email\"\n            placeholder=\"email@gmail.com\"\n            onChangeText={this.onEmailChange.bind(this)}\n            value={email}\n          />\n        </CardSection>\n\n        <CardSection>\n          <Input\n            label=\"Password\"\n            placeholder=\"password\"\n            secureTextEntry\n            onChangeText={this.onPasswordChange.bind(this)}\n            value={password}\n          />\n        </CardSection>\n\n        {this.renderError()}\n\n        <CardSection>{this.renderButton()}</CardSection>\n      </Card>\n    );\n  }\n}\n\nconst styles = {\n  errorTextStyle: {\n    fontSize: 20,\n    alignSelf: \"center\",\n    color: \"red\"\n  }\n};\n\nconst mapStateToProps = state => {\n  const { email, password, error, loading } = state.auth;\n  return { email, password, error, loading };\n};\n\nexport default connect(mapStateToProps, {\n  emailChanged,\n  passwordChanged,\n  loginUser\n})(LoginForm);\n"]},"metadata":{},"sourceType":"module"}