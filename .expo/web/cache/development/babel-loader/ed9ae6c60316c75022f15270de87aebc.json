{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/components/EmployeeList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport { connect } from 'react-redux';\nimport { employeeFetch } from \"../actions\";\nimport _ from 'lodash';\nimport ListItem from \"./ListItem\";\n\nvar EmployeeList = function (_Component) {\n  _inherits(EmployeeList, _Component);\n\n  var _super = _createSuper(EmployeeList);\n\n  function EmployeeList() {\n    _classCallCheck(this, EmployeeList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EmployeeList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.employeeFetch();\n      this.createDataSource(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.createDataSource(nextProps);\n    }\n  }, {\n    key: \"createDataSource\",\n    value: function createDataSource(_ref) {\n      var employees = _ref.employees;\n      var ds = new ListView.DataSource({\n        rowHasChanged: function rowHasChanged(r1, r2) {\n          return r1 !== r2;\n        }\n      });\n      this.dataSource = ds.cloneWithRows(this.props.employees);\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(data) {\n      return React.createElement(ListItem, {\n        employee: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ListView, {\n        enableEmptySections: true,\n        dataSource: this.dataSource,\n        renderRow: this.renderRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 4\n        }\n      });\n    }\n  }]);\n\n  return EmployeeList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var employees = _.map(state.allEmpz, function (val, uid) {\n    return _objectSpread(_objectSpread({}, val), {}, {\n      uid: uid\n    });\n  });\n\n  return {\n    employees: employees\n  };\n};\n\nexport default connect(mapStateToProps, {\n  employeeFetch: employeeFetch\n})(EmployeeList);","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/components/EmployeeList.js"],"names":["React","Component","connect","employeeFetch","_","ListItem","EmployeeList","props","createDataSource","nextProps","employees","ds","ListView","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","data","renderRow","mapStateToProps","state","map","allEmpz","val","uid"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAiC,OAAjC;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP;;IAEMC,Y;;;;;;;;;;;;;yCACe;AACnB,WAAKC,KAAL,CAAWJ,aAAX;AAEA,WAAKK,gBAAL,CAAsB,KAAKD,KAA3B;AACA;;;8CAEyBE,S,EAAU;AAGnC,WAAKD,gBAAL,CAAsBC,SAAtB;AACA;;;2CAC8B;AAAA,UAAZC,SAAY,QAAZA,SAAY;AAC9B,UAAMC,EAAE,GAAG,IAAIC,QAAQ,CAACC,UAAb,CAAwB;AAClCC,QAAAA,aAAa,EAAE,uBAACC,EAAD,EAAMC,EAAN;AAAA,iBAAaD,EAAE,KAAKC,EAApB;AAAA;AADmB,OAAxB,CAAX;AAGA,WAAKC,UAAL,GAAkBN,EAAE,CAACO,aAAH,CAAiB,KAAKX,KAAL,CAAWG,SAA5B,CAAlB;AACA;;;8BACSS,I,EAAK;AACd,aAAO,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;;6BAEO;AACP,aACC,oBAAC,QAAD;AACC,QAAA,mBAAmB,MADpB;AAEC,QAAA,UAAU,EAAE,KAAKF,UAFlB;AAGC,QAAA,SAAS,EAAE,KAAKG,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAOA;;;;EA9ByBnB,S;;AAiC3B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,MAAMZ,SAAS,GAAGN,CAAC,CAACmB,GAAF,CAAMD,KAAK,CAACE,OAAZ,EAAsB,UAACC,GAAD,EAAOC,GAAP,EAAe;AACtD,2CAAYD,GAAZ;AAAkBC,MAAAA,GAAG,EAAHA;AAAlB;AACA,GAFiB,CAAlB;;AAGA,SAAO;AAAEhB,IAAAA,SAAS,EAATA;AAAF,GAAP;AACA,CALD;;AAOA,eAAeR,OAAO,CAACmB,eAAD,EAAmB;AAAElB,EAAAA,aAAa,EAAbA;AAAF,CAAnB,CAAP,CAA6CG,YAA7C,CAAf","sourcesContent":["import React , { Component }from 'react';\nimport { ListView } from 'react-native';\nimport { connect } from 'react-redux';\nimport { employeeFetch } from '../actions';\nimport _ from 'lodash';\nimport ListItem from './ListItem'\n\nclass EmployeeList extends Component{\n\tcomponentWillMount(){\n\t\tthis.props.employeeFetch();\n\n\t\tthis.createDataSource(this.props);\t\t\n\t}\n\n\tcomponentWillReceiveProps(nextProps){\n\t\t//next props are the next set of props this component is gonna be called with and \n\t\t//this.props syilll holds the old props\n\t\tthis.createDataSource(nextProps);\n\t}\n\tcreateDataSource({ employees }){\n\t\tconst ds = new ListView.DataSource({\n\t\t\trowHasChanged: (r1 , r2) => r1 !== r2\n\t\t});\n\t\tthis.dataSource = ds.cloneWithRows(this.props.employees);\n\t}\n\trenderRow(data){\n\t\treturn <ListItem employee={data} />; \n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<ListView \n\t\t\t\tenableEmptySections\n\t\t\t\tdataSource={this.dataSource}\n\t\t\t\trenderRow={this.renderRow}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tconst employees = _.map(state.allEmpz , (val , uid) => {\n\t\treturn { ...val , uid };\n\t});\n\treturn { employees }; \n}\n\nexport default connect(mapStateToProps , { employeeFetch })(EmployeeList);"]},"metadata":{},"sourceType":"module"}