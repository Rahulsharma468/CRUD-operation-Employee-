{"ast":null,"code":"import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\nimport { EMAIL_CHANGED, PASSWORD_CHANGED, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER } from \"./types\";\nexport var emailChanged = function emailChanged(text) {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  };\n};\nexport var passwordChanged = function passwordChanged(text) {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n};\nexport var loginUser = function loginUser(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  console.log('email', email);\n  console.log('password', password);\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_USER\n    });\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      return loginUserSuccess(dispatch, user);\n    }).catch(function () {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n        return loginUserSuccess(dispatch, user);\n      }).catch(function () {\n        return loginUserFail(dispatch);\n      });\n    });\n  };\n};\n\nvar loginUserFail = function loginUserFail(dispatch) {\n  dispatch({\n    type: LOGIN_USER_FAIL\n  });\n};\n\nvar loginUserSuccess = function loginUserSuccess(dispatch, user) {\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  });\n  Actions.main();\n};","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/actions/AuthActions.js"],"names":["firebase","Actions","EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER","emailChanged","text","type","payload","passwordChanged","loginUser","email","password","console","log","dispatch","auth","signInWithEmailAndPassword","then","user","loginUserSuccess","catch","createUserWithEmailAndPassword","loginUserFail","main"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,aAAT,EACGC,gBADH,EAEGC,kBAFH,EAGGC,eAHH,EAIGC,UAJH;AAOA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACrC,SAAO;AACNC,IAAAA,IAAI,EAAEP,aADA;AAENQ,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACH,IAAD,EAAU;AACxC,SAAO;AACNC,IAAAA,IAAI,EAAEN,gBADA;AAENO,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AAGA,SAAO,UAACG,QAAD,EAAc;AACpBA,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAR;AAEAN,IAAAA,QAAQ,CAACkB,IAAT,GAAgBC,0BAAhB,CAA2CN,KAA3C,EAAkDC,QAAlD,EACEM,IADF,CACO,UAAAC,IAAI;AAAA,aAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,KADX,EAEEE,KAFF,CAEQ,YAAM;AACZvB,MAAAA,QAAQ,CAACkB,IAAT,GAAgBM,8BAAhB,CAA+CX,KAA/C,EAAsDC,QAAtD,EACEM,IADF,CACO,UAAAC,IAAI;AAAA,eAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,OADX,EAEEE,KAFF,CAEQ;AAAA,eAAME,aAAa,CAACR,QAAD,CAAnB;AAAA,OAFR;AAGA,KANF;AAOA,GAVD;AAWA,CAhBM;;AAkBP,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACR,QAAD,EAAc;AACnCA,EAAAA,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACA,CAFD;;AAIA,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEL,QAAF,EAAYI,IAAZ,EAAsB;AAC9CJ,EAAAA,QAAQ,CAAC;AACRR,IAAAA,IAAI,EAAEL,kBADE;AAERM,IAAAA,OAAO,EAAEW;AAFD,GAAD,CAAR;AAKApB,EAAAA,OAAO,CAACyB,IAAR;AACA,CAPD","sourcesContent":["import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\nimport { EMAIL_CHANGED,\n\t\t PASSWORD_CHANGED,\n\t\t LOGIN_USER_SUCCESS,\n\t\t LOGIN_USER_FAIL,\n\t\t LOGIN_USER\n} from './types';\n\nexport const emailChanged = (text) => {\n\treturn {\n\t\ttype: EMAIL_CHANGED,\n\t\tpayload: text\n\t};\n};\n\nexport const passwordChanged = (text) => {\n\treturn {\n\t\ttype: PASSWORD_CHANGED,\n\t\tpayload: text\n\t};\n};\n\nexport const loginUser = ({ email, password }) => {\n\tconsole.log('email', email);\n\tconsole.log('password', password);\n\n\n\treturn (dispatch) => {\n\t\tdispatch({ type: LOGIN_USER });\n\n\t\tfirebase.auth().signInWithEmailAndPassword(email, password)\n\t\t\t.then(user => loginUserSuccess(dispatch, user))\n\t\t\t.catch(() => {\n\t\t\t\tfirebase.auth().createUserWithEmailAndPassword(email, password)\n\t\t\t\t\t.then(user => loginUserSuccess(dispatch, user))\n\t\t\t\t\t.catch(() => loginUserFail(dispatch));\n\t\t\t});\n\t};\n};\n\nconst loginUserFail = (dispatch) => {\n\tdispatch({ type: LOGIN_USER_FAIL });\n};\n\nconst loginUserSuccess = ( dispatch, user ) => {\n\tdispatch({\n\t\ttype: LOGIN_USER_SUCCESS,\n\t\tpayload: user\n\t});\n\n\tActions.main();\n};"]},"metadata":{},"sourceType":"module"}