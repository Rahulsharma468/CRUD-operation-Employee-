{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from \"./reducers\";\nimport LoginForm from \"./components/LoginForm\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var config = {\n        apiKey: \"AIzaSyDy4rzv0kQWOanG6GSCbLn7VdT5nrcgGs0\",\n        authDomain: \"manager-bda67.firebaseapp.com\",\n        databaseURL: \"https://manager-bda67.firebaseio.com\",\n        projectId: \"manager-bda67\",\n        storageBucket: \"manager-bda67.appspot.com\",\n        messagingSenderId: \"951254599554\",\n        appId: \"1:951254599554:web:7b72b379c17c020333b19b\",\n        measurementId: \"G-FG9JKHR24Z\"\n      };\n      firebase.initializeApp(config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/App.js"],"names":["React","Component","firebase","Provider","createStore","applyMiddleware","ReduxThunk","reducers","LoginForm","App","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;;IAEMC,G;;;;;;;;;;;;;yCACiB;AACnB,UAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,yCADK;AAEfC,QAAAA,UAAU,EAAE,+BAFG;AAGfC,QAAAA,WAAW,EAAE,sCAHE;AAIfC,QAAAA,SAAS,EAAE,eAJI;AAKfC,QAAAA,aAAa,EAAE,2BALA;AAMfC,QAAAA,iBAAiB,EAAE,cANJ;AAOfC,QAAAA,KAAK,EAAE,2CAPQ;AAQfC,QAAAA,aAAa,EAAE;AARA,OAAf;AAWAhB,MAAAA,QAAQ,CAACiB,aAAT,CAAuBT,MAAvB;AACD;;;6BAEQ;AAKP,UAAMU,KAAK,GAAGhB,WAAW,CAACG,QAAD,EAAW,EAAX,EAAeF,eAAe,CAACC,UAAD,CAA9B,CAAzB;AAEA,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEc,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EA5BepB,KAAK,CAACC,S;;AA+BxB,eAAeQ,GAAf","sourcesContent":["import React , { Component }from 'react';\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport LoginForm from './components/LoginForm';\n\nclass App extends React.Component {\n  componentWillMount() {\n    const config = {\n      apiKey: \"AIzaSyDy4rzv0kQWOanG6GSCbLn7VdT5nrcgGs0\",\n    authDomain: \"manager-bda67.firebaseapp.com\",\n    databaseURL: \"https://manager-bda67.firebaseio.com\",\n    projectId: \"manager-bda67\",\n    storageBucket: \"manager-bda67.appspot.com\",\n    messagingSenderId: \"951254599554\",\n    appId: \"1:951254599554:web:7b72b379c17c020333b19b\",\n    measurementId: \"G-FG9JKHR24Z\"\n    };\n\n    firebase.initializeApp(config);\n  }\n\n  render() {\n    //2nd {} arg is for any initial state that we might want to pass to \n    //the redux app like we want o populate email and password for auth so we can do it\n    //applymiddleware is called as store enhancer \n    // {} --> initial state that we want to pass to the reducer\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n    return (\n      <Provider store={store}>\n        <LoginForm />\n      </Provider>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}