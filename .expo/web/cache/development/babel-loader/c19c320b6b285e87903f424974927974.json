{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { EMAIL_CHANGED, PASSWORD_CHANGED, LOGIN_USER_SUCCESS } from \"../actions/types\";\nvar INITIAL_STATE = {\n  email: '',\n  password: '',\n  user: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case EMAIL_CHANGED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.payload\n      });\n\n    case PASSWORD_CHANGED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.payload\n      });\n\n    case LOGIN_USER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: '',\n        password: '',\n        user: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/reducers/AuthReducer.js"],"names":["EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","INITIAL_STATE","email","password","user","state","action","console","log","type","payload"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAyBC,gBAAzB,EAA4CC,kBAA5C;AAEA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAcC,EAAAA,QAAQ,EAAE,EAAxB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAAtB;AAEA,gBAAe,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACC,SAAKX,aAAL;AACC,6CAAYO,KAAZ;AAAoBH,QAAAA,KAAK,EAAEI,MAAM,CAACI;AAAlC;;AACD,SAAKX,gBAAL;AACC,6CAAYM,KAAZ;AAAoBF,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAArC;;AACD,SAAKV,kBAAL;AACC,6CAAYK,KAAZ;AAAoBH,QAAAA,KAAK,EAAE,EAA3B;AAAgCC,QAAAA,QAAQ,EAAE,EAA1C;AAA+CC,QAAAA,IAAI,EAAEE,MAAM,CAACI;AAA5D;;AACD;AACC,aAAOL,KAAP;AARF;AAUA,CAZD","sourcesContent":["import { EMAIL_CHANGED , PASSWORD_CHANGED , LOGIN_USER_SUCCESS } from '../actions/types';\n\nconst INITIAL_STATE = { email: '' , password: '' , user: null};\n\nexport default (state = INITIAL_STATE, action) => {\n\tconsole.log(action);\n\tswitch(action.type){\n\t\tcase EMAIL_CHANGED:\n\t\t\treturn { ...state , email: action.payload };\n\t\tcase PASSWORD_CHANGED:\n\t\t\treturn { ...state , password: action.payload };\n\t\tcase LOGIN_USER_SUCCESS:\n\t\t\treturn { ...state , email: '' , password: '' , user: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}