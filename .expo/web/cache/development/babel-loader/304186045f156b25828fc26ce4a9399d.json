{"ast":null,"code":"import firebase from 'firebase';\nimport { Actions } from 'react-native-router-flux';\nimport { EMAIL_CHANGED, PASSWORD_CHANGED, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER } from \"./types\";\nexport var emailChanged = function emailChanged(text) {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  };\n};\nexport var passwordChanged = function passwordChanged(text) {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n};\nexport var loginUser = function loginUser(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_USER\n    });\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      return loginUserSuccess(dispatch, user);\n    }).catch(function () {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n        return loginUserSuccess(dispatch, user);\n      }).catch(function () {\n        loginUserFail(dispatch);\n      });\n    });\n  };\n};\n\nvar loginUserSuccess = function loginUserSuccess(dispatch, user) {\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  });\n  Actions.main();\n};\n\nvar loginUserFail = function loginUserFail(dispatch) {\n  dispatch({\n    type: LOGIN_USER_FAIL\n  });\n};","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/actions/AuthActions.js"],"names":["firebase","Actions","EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER","emailChanged","text","type","payload","passwordChanged","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","loginUserSuccess","catch","createUserWithEmailAndPassword","loginUserFail","main"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,UALF;AAQA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEP,aADD;AAELQ,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACH,IAAD,EAAU;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEN,gBADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAACgB,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,EAAkDC,QAAlD,EACGI,IADH,CACQ,UAAAC,IAAI;AAAA,aAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,KADZ,EAEGE,KAFH,CAES,YAAM;AACXrB,MAAAA,QAAQ,CAACgB,IAAT,GAAgBM,8BAAhB,CAA+CT,KAA/C,EAAsDC,QAAtD,EACGI,IADH,CACQ,UAAAC,IAAI;AAAA,eAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,OADZ,EAEGE,KAFH,CAES,YAAI;AACTE,QAAAA,aAAa,CAACR,QAAD,CAAb;AACD,OAJH;AAKD,KARH;AAUD,GAZD;AAaD,CAdM;;AAgBP,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,QAAD,EAAWI,IAAX,EAAoB;AAC3CJ,EAAAA,QAAQ,CAAC;AACPN,IAAAA,IAAI,EAAEL,kBADC;AAEPM,IAAAA,OAAO,EAAES;AAFF,GAAD,CAAR;AAKAlB,EAAAA,OAAO,CAACuB,IAAR;AACD,CAPD;;AASA,IAAMD,aAAa,GAAG,SAAhBA,aAAgB,CAACR,QAAD,EAAc;AAClCA,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACD,CAFD","sourcesContent":["import firebase from 'firebase'\nimport { Actions } from 'react-native-router-flux'\nimport {\n  EMAIL_CHANGED,\n  PASSWORD_CHANGED,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAIL,\n  LOGIN_USER\n} from './types'\n\nexport const emailChanged = (text) => {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  }\n}\n\nexport const passwordChanged = (text) => {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  }\n}\n\nexport const loginUser = ({ email, password }) => {\n  return (dispatch) => {\n    dispatch({ type: LOGIN_USER })\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(user => loginUserSuccess(dispatch, user))\n      .catch(() => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n          .then(user => loginUserSuccess(dispatch, user))\n          .catch(()=>{\n            loginUserFail(dispatch)\n          })\n      })\n\n  }\n}\n\nconst loginUserSuccess = (dispatch, user) => {\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  })\n\n  Actions.main()\n}\n\nconst loginUserFail = (dispatch) => {\n  dispatch({ type: LOGIN_USER_FAIL })\n}\n"]},"metadata":{},"sourceType":"module"}