{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport firebase from 'firebase';\nimport reducers from \"./reducers\";\nimport ReduxThunk from 'redux-thunk';\nimport Router from \"./Router\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var config = {\n        apiKey: 'AIzaSyCqclP8vBNHxyxG1wUNuBgclYjytLN10ew',\n        authDomain: 'manager-7ec1e.firebaseapp.com',\n        databaseURL: 'https://manager-7ec1e.firebaseio.com',\n        storageBucket: 'manager-7ec1e.appspot.com',\n        messagingSenderId: '845063586877'\n      };\n      firebase.initializeApp(config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/App.js"],"names":["React","Component","Provider","createStore","applyMiddleware","firebase","reducers","ReduxThunk","Router","App","config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","initializeApp","store"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP;;IAEqBC,G;;;;;;;;;;;;;yCAEC;AAClB,UAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,yCADK;AAEbC,QAAAA,UAAU,EAAE,+BAFC;AAGbC,QAAAA,WAAW,EAAE,sCAHA;AAIbC,QAAAA,aAAa,EAAE,2BAJF;AAKbC,QAAAA,iBAAiB,EAAE;AALN,OAAf;AAQAV,MAAAA,QAAQ,CAACW,aAAT,CAAuBN,MAAvB;AACD;;;6BACO;AACN,UAAMO,KAAK,GAAGd,WAAW,CAACG,QAAD,EAAW,EAAX,EAAeF,eAAe,CAACG,UAAD,CAA9B,CAAzB;AACA,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEU,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EApB8BhB,S;;SAAZQ,G","sourcesContent":["import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport firebase from 'firebase'\nimport reducers from './reducers'\nimport ReduxThunk from 'redux-thunk'\nimport Router from './Router'\n\nexport default class App extends Component {\n\n  componentWillMount(){\n    const config = {\n      apiKey: 'AIzaSyCqclP8vBNHxyxG1wUNuBgclYjytLN10ew',\n      authDomain: 'manager-7ec1e.firebaseapp.com',\n      databaseURL: 'https://manager-7ec1e.firebaseio.com',\n      storageBucket: 'manager-7ec1e.appspot.com',\n      messagingSenderId: '845063586877'\n    };\n\n    firebase.initializeApp(config);\n  }\n  render(){\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk))\n    return(\n      <Provider store={store}>\n        <Router />\n      </Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}