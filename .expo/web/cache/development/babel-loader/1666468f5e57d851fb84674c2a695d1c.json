{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tanjiro255/Desktop/React/manager/src/components/EmployeeList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport { employeesFetch } from \"../actions\";\nimport ListItem from \"./ListItem\";\n\nvar EmployeeList = function (_Component) {\n  _inherits(EmployeeList, _Component);\n\n  var _super = _createSuper(EmployeeList);\n\n  function EmployeeList() {\n    _classCallCheck(this, EmployeeList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EmployeeList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('EmployeeList');\n      this.props.employeesFetch();\n      this.createDataSource(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.createDataSource(nextProps);\n    }\n  }, {\n    key: \"createDataSource\",\n    value: function createDataSource(_ref) {\n      var employees = _ref.employees;\n      var ds = new ListView.DataSource({\n        rowHasChanged: function rowHasChanged(r1, r2) {\n          return r1 !== r2;\n        }\n      });\n      this.dataSource = ds.cloneWithRows(employees);\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(employee) {\n      console.log('row rendered');\n      console.log('employee', employee);\n      return React.createElement(ListItem, {\n        employee: employee,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('this.props', this.props);\n      return React.createElement(ListView, {\n        enableEmptySections: true,\n        dataSource: this.dataSource,\n        renderRow: this.renderRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 4\n        }\n      });\n    }\n  }]);\n\n  return EmployeeList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var employees = _.map(state.employees, function (val, uid) {\n    return _objectSpread(_objectSpread({}, val), {}, {\n      uid: uid\n    });\n  });\n\n  return {\n    employees: employees\n  };\n};\n\nexport default connect(mapStateToProps, {\n  employeesFetch: employeesFetch\n})(EmployeeList);","map":{"version":3,"sources":["/home/tanjiro255/Desktop/React/manager/src/components/EmployeeList.js"],"names":["_","React","Component","connect","employeesFetch","ListItem","EmployeeList","console","log","props","createDataSource","nextProps","employees","ds","ListView","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","employee","renderRow","mapStateToProps","state","map","val","uid"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT;AACA,OAAOC,QAAP;;IAEMC,Y;;;;;;;;;;;;;yCACgB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,WAAKC,KAAL,CAAWL,cAAX;AAEA,WAAKM,gBAAL,CAAsB,KAAKD,KAA3B;AACA;;;8CAEyBE,S,EAAW;AAIpC,WAAKD,gBAAL,CAAsBC,SAAtB;AACA;;;2CAE+B;AAAA,UAAbC,SAAa,QAAbA,SAAa;AAC/B,UAAMC,EAAE,GAAG,IAAIC,QAAQ,CAACC,UAAb,CAAwB;AAClCC,QAAAA,aAAa,EAAE,uBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA;AADmB,OAAxB,CAAX;AAIA,WAAKC,UAAL,GAAkBN,EAAE,CAACO,aAAH,CAAiBR,SAAjB,CAAlB;AACA;;;8BAESS,Q,EAAU;AACnBd,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACED,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,QAAxB;AAEF,aAAO,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;;6BAEQ;AACRd,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKC,KAA/B;AAEA,aACC,oBAAC,QAAD;AACC,QAAA,mBAAmB,MADpB;AAEC,QAAA,UAAU,EAAE,KAAKU,UAFlB;AAGC,QAAA,SAAS,EAAE,KAAKG,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAOA;;;;EAzCyBpB,S;;AA4C3B,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,MAAMZ,SAAS,GAAGZ,CAAC,CAACyB,GAAF,CAAMD,KAAK,CAACZ,SAAZ,EAAuB,UAACc,GAAD,EAAMC,GAAN,EAAc;AACtD,2CAAYD,GAAZ;AAAiBC,MAAAA,GAAG,EAAHA;AAAjB;AAEA,GAHiB,CAAlB;;AAKA,SAAO;AAAEf,IAAAA,SAAS,EAATA;AAAF,GAAP;AACA,CAPD;;AASA,eAAeT,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,cAAc,EAAdA;AAAF,CAAlB,CAAP,CAA6CE,YAA7C,CAAf","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ListView } from 'react-native';\nimport { employeesFetch } from '../actions';\nimport ListItem from './ListItem';\n\nclass EmployeeList extends Component {\n\tcomponentWillMount() {\n\t\tconsole.log('EmployeeList');\n\n\t\tthis.props.employeesFetch();\n\n\t\tthis.createDataSource(this.props);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\t// nextProps are the next set of props that this component will be rendered with\n\t\t// this.props is still the old set of props\n\n\t\tthis.createDataSource(nextProps);\n\t}\n\n\tcreateDataSource({ employees }) {\n\t\tconst ds = new ListView.DataSource({\n\t\t\trowHasChanged: (r1, r2) => r1 !== r2\n\t\t});\n\n\t\tthis.dataSource = ds.cloneWithRows(employees);\n\t}\n\n\trenderRow(employee) {\n\t\tconsole.log('row rendered');\n    console.log('employee', employee);\n\n\t\treturn <ListItem employee={employee} />;\n\t}\n\n\trender() {\n\t\tconsole.log('this.props', this.props);\n\n\t\treturn(\n\t\t\t<ListView\n\t\t\t\tenableEmptySections\n\t\t\t\tdataSource={this.dataSource}\n\t\t\t\trenderRow={this.renderRow}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst employees = _.map(state.employees, (val, uid) => {\n\t\treturn { ...val, uid }; \n\t\t// resulting in { shift: 'Monday', name: 'Sal', id: '1jf4314' }\n\t});\n\n\treturn { employees };\n};\n\nexport default connect(mapStateToProps, { employeesFetch })(EmployeeList);"]},"metadata":{},"sourceType":"module"}